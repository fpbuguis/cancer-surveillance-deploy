import{Q as ne,d as c,l as ce,s as u,T as me,o as i,e as d,b as P,u as n,w as j,F as y,Z as de,a as o,t as f,f as _,c as h,h as b,q as w,A as R,x as pe,n as ue,g as ye,k as fe}from"./app-42536e63.js";import{_ as L}from"./InputError-d893a523.js";import{_ as _e}from"./PrimaryButton-cd95b478.js";import{_ as ve}from"./TextInput-d9580142.js";import{A as ge}from"./Alert-e9943a8b.js";import Se from"./Layout-1c104a2a.js";import"./index-189aeacd.js";import{_ as he}from"./_plugin-vue_export-helper-c27b6911.js";import"./DropdownLink-ed97a0d6.js";/* empty css                                                               */const be={key:0,class:"alert-warning",style:{margin:"0 auto","margin-bottom":"20px",padding:"10px","border-radius":"4px",border:"1px solid","background-color":"#fffbe6",color:"#856404",width:"45%"}},we={class:"lab-list"},xe={class:"mt-1 mb-2 grid grid-cols-1 md:grid-cols-2"},Ee=["value"],ke={class:"ml-2"},Pe={class:"lab-list"},Re={class:"mt-1 mb-2 grid grid-cols-1 md:grid-cols-2"},Le=["value"],Te={class:"ml-2"},Ie={class:"lab-list"},De={class:"mt-1 mb-2 grid grid-cols-1 md:grid-cols-2"},Ce=["value"],Qe={class:"ml-2"},Ve={class:"lab-list"},$e={class:"mt-1 mb-2 grid grid-cols-1 md:grid-cols-2"},Fe=["value"],Me={class:"ml-2"},Ue={class:"lab-list"},Ae={class:"lab-list"},Oe={class:"mt-1 mb-2 grid grid-cols-1 md:grid-cols-2"},Ne=["value"],Be={class:"ml-2"},je={class:"flex items-center justify-center mt-4"},ze={__name:"SymptomsReportPage",setup(He){const{props:v}=ne();v.auth.user.user_id,v.auth.user.firstname;const z=v.auth.user.lastname,$=v.auth.user.email,T=c([]),I=c([]),D=c([]),C=c([]),p=c(null),F=c({}),g=c(null),M=c(null),x=c(null),E=c(null),Q=c([]),k=c([]),S=c(null),l=c({show:!1,message:"",type:""}),H=async()=>{try{const e=await axios.get("/api/find-patient",{params:{lastname:z,email:$}});p.value=e.data.patient_id||null,p.value||l("Unable to find patient ID. Please verify your information.")}catch(e){console.error("Failed to fetch patient ID:",e),l("An error occurred while fetching patient information.")}},q=async()=>{try{if(!p.value){console.warn("Skipping disease profile fetch as patient ID is missing.");return}const e=await axios.get(`/api/disease/${p.value}/profile`);F.value=e.data||{},g.value=F.value.disease_primarySite}catch(e){console.error("Failed to fetch disease profile:",e),l("An error occurred while fetching the disease profile.")}},Y=async()=>{try{const e=await axios.get("/api/symptom-category/1");T.value=e.data,console.log("Local Symptoms: ",T.value)}catch(e){console.error("Error fetching symptoms:",e)}},Z=async()=>{try{const e=await axios.get("/api/symptom-category/2");I.value=e.data,console.log("Systemic Symptoms: ",I.value)}catch(e){console.error("Error fetching symptoms:",e)}},G=async()=>{try{const e=await axios.get("/api/symptom-category/3");D.value=e.data,console.log("Quality of Life Symptoms: ",D.value)}catch(e){console.error("Error fetching symptoms:",e)}},J=async()=>{try{const e=await axios.get("/api/symptom-category/4");C.value=e.data,console.log("Treatment Side Effect Symptoms: ",C.value)}catch(e){console.error("Error fetching symptoms:",e)}},K=async()=>{try{const e=await axios.get(`/api/patient/${p.value}/treatments`);console.log("Treatment History: ",e.data);const t=e.data.rxtypes,a=e.data.treatments[0].treatment_primaryRxType;if(console.log(a),t){const r={rxtype_chemotherapy:"Chemotherapy",rxtype_hormonaltherapy:"Hormonal Therapy",rxtype_immunotherapy:"Immunotherapy",rxtype_radiotherapy:"Radiotherapy",rxtype_surgery:"Surgery",rxtype_others:"Others"};Q.value=Object.entries(r).filter(([m,B])=>t[0][m]===1).map(([m,B])=>B),console.log(Q.value),k.value=[...Q.value],a&&k.value.push(a),console.log("Treatment Completion: ",k.value)}}catch(e){console.error("Error fetching treatments:",e)}},W=async()=>{try{const e=await axios.get(`/api/patients/${p.value}/survey-responses`);if(S.value=e.data,S.value&&S.value.surveyResponse_date){console.log("survey response",S);const t=new Date(S.value.surveyResponse_date),a=new Date,r=new Date(t);r.setMonth(r.getMonth()+3),console.log(t),console.log(a),console.log(r),console.log("3 months later",r),console.log("current date",a),a<r?(l.value={show:!0,message:"Please answer this form after 3 months.",type:"warning"},X()):l.value={show:!1,message:"",type:""}}}catch(e){console.error("Failed to fetch survey responses:",e)}},X=()=>{s.disabled=!0};ce(async()=>{try{if(await H(),!p.value){console.error("Patient ID not found. Other data will not be fetched.");return}await q(),await Y(),await Z(),await G(),await J(),await K(),await W()}catch(e){console.error("Error during initialization:",e)}});const ee=u(()=>T.value.filter(e=>e.cancer_type.body_site_id===g.value||e.cancer_type.body_site_name==="Negative"||e.cancer_type.body_site_name==="All")),te=u(()=>I.value.filter(e=>e.cancer_type.body_site_id===g.value||e.cancer_type.body_site_name==="Negative"||e.cancer_type.body_site_name==="All")),se=u(()=>D.value.filter(e=>e.cancer_type.body_site_id===g.value||e.cancer_type.body_site_name==="Negative"||e.cancer_type.body_site_name==="All")),oe=u(()=>C.value.filter(e=>e.cancer_type.body_site_id===g.value||e.cancer_type.body_site_name==="Negative"||e.cancer_type.body_site_name==="All")),s=me({patient_id:"",doctor_id:"",surveyResponse_date:"",symptom_surveys:[],selectedLocalSymptoms:"",selectedSystemicSymptoms:"",selectedQuality:"",selectedSideEffects:"",selectedTreatmentCompletion:[],additional_symptoms:""});let V=v.auth.user.user_id;const ae=async(e,t)=>{try{let a;return e===2?(a=await axios.get(`/api/doctor-profile/${t}`),x.value=a.data,E.value=x.value.doctor_id):(a=await axios.get(`/api/patient-profile/${t}`),x.value=a.data,E.value=x.value.patient_id),console.log(E.value),E.value}catch(a){console.error(`Failed to fetch doctor with userId ${t}:`,a)}},le=async e=>{try{let t=await axios.get(`/api/latestonboards/${e}`);return M.value=t.data.doctor_id,M.value}catch(t){console.error(`Failed to fetch doctor with userId ${V}:`,t)}},re=()=>{s.patient_id="",s.doctor_id="",s.surveyResponse_date="",s.selectedLocalSymptoms=[],s.selectedSystemicSymptoms=[],s.selectedQuality=[],s.selectedSideEffects=[],s.additional_symptoms="",s.selectedTreatmentCompletion=[]},ie=async()=>{if(l.value.show=!1,!p.value){l("Patient ID is missing. Unable to submit the report.");return}if(!s.selectedLocalSymptoms&&!s.selectedSystemicSymptoms&&!s.selectedQuality&&!s.selectedSideEffects){l("Please select at least one symptom category.");return}s.patient_id=await ae(1,V),s.doctor_id=await le(s.patient_id),s.surveyResponse_date=new Date().toISOString(),s.symptom_surveys=[s.selectedLocalSymptoms,s.selectedSystemicSymptoms,s.selectedQuality,s.selectedSideEffects];try{const e=await axios.post("/api/create-symptoms-report",{patient_id:s.patient_id,doctor_id:s.doctor_id,surveyResponse_date:new Date(s.surveyResponse_date).toISOString().split("T")[0],symptom_surveys:s.symptom_surveys,response_notes:s.additional_symptoms,treatment_completion:s.selectedTreatmentCompletion.join(", ")});let t=await axios.get(`api/get-doctor/${s.doctor_id}`);await axios.post("/api/create-notification-log",{from:$,to:t.data.user.email,subject:"Symptom Survey Submission",message:"Submitted my symptom report.",senderId:V,receiverId:t.data.user.user_id,notificationStatus:1,notificationType:1,surveyResponseId:e.data.surveyResponse_id}),l.value={show:!0,message:"Success! Symptoms report submitted successfully.",type:"success"},re()}catch(e){console.error("Submission errors:",e),l("Failed to submit the symptoms report. Please try again.")}},U=u(()=>s.selectedLocalSymptoms!==""),A=u(()=>s.selectedSystemicSymptoms!==""),O=u(()=>s.selectedQuality!==""),N=u(()=>s.selectedSideEffects!=="");return(e,t)=>(i(),d(y,null,[P(n(de),{title:"Symptoms Report"}),P(Se,null,{default:j(()=>[t[18]||(t[18]=o("div",{class:"page-heading"},[o("h1",{class:"main-heading"},"SYMPTOMS REPORT")],-1)),l.value.show&&l.value.type==="warning"?(i(),d("div",be,f(l.value.message),1)):_("",!0),o("form",{onSubmit:fe(ie,["prevent"]),class:"form-container",style:{width:"700px"}},[o("div",we,[t[7]||(t[7]=o("h2",null,"Local Symptoms:",-1)),U.value?_("",!0):(i(),h(L,{key:0,message:"Please select at least one.",class:"smallnote"})),o("div",xe,[(i(!0),d(y,null,b(ee.value,(a,r)=>(i(),d("label",{key:r,class:"inline-flex items-center"},[w(o("input",{name:"local_symptom",type:"radio",value:a.symptomSurvey_id,"onUpdate:modelValue":t[0]||(t[0]=m=>n(s).selectedLocalSymptoms=m),class:"form-radio"},null,8,Ee),[[R,n(s).selectedLocalSymptoms]]),t[6]||(t[6]=o("span",{class:"custom-radio"},null,-1)),o("span",ke,f(a.symptom_name),1)]))),128))])]),o("div",Pe,[t[9]||(t[9]=o("h2",null,"Systemic Symptoms:",-1)),A.value?_("",!0):(i(),h(L,{key:0,message:"Please select at least one.",class:"smallnote"})),o("div",Re,[(i(!0),d(y,null,b(te.value,(a,r)=>(i(),d("label",{key:r,class:"inline-flex items-center"},[w(o("input",{type:"radio",value:a.symptomSurvey_id,"onUpdate:modelValue":t[1]||(t[1]=m=>n(s).selectedSystemicSymptoms=m),class:"form-radio"},null,8,Le),[[R,n(s).selectedSystemicSymptoms]]),t[8]||(t[8]=o("span",{class:"custom-radio"},null,-1)),o("span",Te,f(a.symptom_name),1)]))),128))])]),o("div",Ie,[t[11]||(t[11]=o("h2",null,"Quality of Life:",-1)),O.value?_("",!0):(i(),h(L,{key:0,message:"Please select at least one.",class:"smallnote"})),o("div",De,[(i(!0),d(y,null,b(se.value,(a,r)=>(i(),d("label",{key:r,class:"inline-flex items-center"},[w(o("input",{type:"radio",value:a.symptomSurvey_id,"onUpdate:modelValue":t[2]||(t[2]=m=>n(s).selectedQuality=m),class:"form-radio"},null,8,Ce),[[R,n(s).selectedQuality]]),t[10]||(t[10]=o("span",{class:"custom-radio"},null,-1)),o("span",Qe,f(a.symptom_name),1)]))),128))])]),o("div",Ve,[t[13]||(t[13]=o("h2",null,"Treatment Side Effects:",-1)),N.value?_("",!0):(i(),h(L,{key:0,message:"Please select at least one.",class:"smallnote"})),o("div",$e,[(i(!0),d(y,null,b(oe.value,(a,r)=>(i(),d("label",{key:r,class:"inline-flex items-center"},[w(o("input",{type:"radio",value:a.symptomSurvey_id,"onUpdate:modelValue":t[3]||(t[3]=m=>n(s).selectedSideEffects=m),class:"form-radio"},null,8,Fe),[[R,n(s).selectedSideEffects]]),t[12]||(t[12]=o("span",{class:"custom-radio"},null,-1)),o("span",Me,f(a.symptom_name),1)]))),128))])]),o("div",Ue,[t[14]||(t[14]=o("h2",null,"Please specify other symptom/s you are experiencing:",-1)),P(ve,{id:"additional_symptoms",modelValue:n(s).additional_symptoms,"onUpdate:modelValue":t[4]||(t[4]=a=>n(s).additional_symptoms=a),type:"text",class:"mt-1 block w-full"},null,8,["modelValue"])]),o("div",Ae,[t[15]||(t[15]=o("h2",null,"Treatment Completion:",-1)),t[16]||(t[16]=o("p",{class:"smallnote"},"*Please select treatment/s you already received",-1)),o("div",Oe,[(i(!0),d(y,null,b(k.value,(a,r)=>(i(),d("label",{key:r,class:"inline-flex items-center"},[w(o("input",{name:"treatmentcompletion",type:"checkbox",value:a,"onUpdate:modelValue":t[5]||(t[5]=m=>n(s).selectedTreatmentCompletion=m),class:"form-checkbox"},null,8,Ne),[[pe,n(s).selectedTreatmentCompletion]]),o("span",Be,f(a),1)]))),128))])]),o("div",je,[P(_e,{class:ue(["ms-4",{"opacity-25":n(s).processing}]),disabled:n(s).processing||l.value.show||!U.value||!A.value||!O.value||!N.value},{default:j(()=>t[17]||(t[17]=[ye(" Submit ")])),_:1},8,["class","disabled"])])],32),l.value.show&&l.value.type!=="warning"?(i(),h(ge,{key:1,message:l.value.message,type:l.value.type},null,8,["message","type"])):_("",!0)]),_:1})],64))}},st=he(ze,[["__scopeId","data-v-202942cc"]]);export{st as default};
