import{Q as j,d,l as N,s as L,T as W,o as c,e as _,b,u as l,w as v,F as D,m as u,Z as z,a,c as R,f as h,h as Q,q as P,A as x,t as Y,g as $,n as Z,k as G}from"./app-42536e63.js";import{_ as H}from"./InputError-d893a523.js";import{_ as J}from"./InputLabel-ff26f500.js";import{_ as K}from"./PrimaryButton-cd95b478.js";import{_ as X}from"./TextInput-d9580142.js";import{A as ee}from"./Alert-e9943a8b.js";import te from"./Layout-1c104a2a.js";import"./index-189aeacd.js";import{_ as se}from"./_plugin-vue_export-helper-c27b6911.js";import"./DropdownLink-ed97a0d6.js";/* empty css                                                               */const ae={class:"form-section"},oe={class:"mt-1 mb-2 grid grid-cols-1 gap-2"},re=["value"],ie={class:"ml-2"},le={class:"inline-flex items-center"},ne={key:0},ue={class:"form-section"},de={class:"flex items-center justify-center mt-4"},ce={__name:"LaboratoryResultPage",setup(pe){const{props:w}=j(),F=w.auth.user.user_id,I=w.auth.user.lastname,k=w.auth.user.email,p=d(null),y=d({}),S=d(null),m=d([]),f=d([]),n=d({show:!1,message:"",type:""}),V=async()=>{try{const t=await u.get("/api/find-patient",{params:{lastname:I,email:k}});p.value=t.data.patient_id}catch(t){console.log("Failed to fetch patient ID:",t)}},E=async()=>{try{let t=await u.get(`/api/disease/${p.value}/profile`);y.value=t.data,console.log("Disease Profile:",y.value),S.value=y.value.disease_primarySite}catch(t){console.error("Failed to fetch patient disease profile:",t)}},q=async()=>{try{const t=await u.get(`/api/labMonitors/primary-site/${S.value}`);m.value=t.data,console.log("Laboratories: ",m.value)}catch(t){console.error("Error fetching laboratories:",t)}},A=async()=>{try{const t=await u.get(`/api/patients/${p.value}/labs-submitted`);f.value=t.data,console.log("Submitted Laboratories: ",f.value)}catch(t){console.error("Error fetching submitted laboratories:",t)}},B=async t=>{try{let e=await u.get(`/api/latestonboards/${t}`);return console.log(e.data.doctor_id),e.data.doctor_id}catch(e){console.error("Failed to fetch doctor:",e)}};N(async()=>{await V(),await E(),await q(),await A()});const M=t=>{const e=f.value.filter(r=>r.workup_id===t);return e.length===0?null:e.sort((r,i)=>new Date(i.labSubmission_date)-new Date(r.labSubmission_date))[0].labSubmission_date},O=(t,e)=>{const o=new Date,r=new Date(t),i=new Date(r);return i.setMonth(i.getMonth()+e),o<=i},T=L(()=>!m.value.length||!f.value.length?m.value:m.value.filter(t=>{const e=M(t.workup.workup_id);if(!e)return!0;const o=t.workup_frequency;return o?!O(e,o):!1})),s=W({patient_id:"",doctor_id:"",workupSubmitted:"",other_workups:"",labResults:[]}),C=async()=>{var e,o;if(n.value.show=!1,!g.value){n("Please select a workup.");return}if(s.labResults.length===0){n("Please attach at least one lab result.");return}s.patient_id=p.value,s.doctor_id=await B(p.value);const t=new FormData;t.append("patient_id",s.patient_id),t.append("doctor_id",s.doctor_id),t.append("workupSubmitted",s.workupSubmitted),t.append("other_workups",s.other_workups),s.labResults.forEach(r=>{t.append("labResults[]",r)}),console.log(t);try{const r=await u.post("/api/labs/submit",t,{headers:{"Content-Type":"multipart/form-data"}});let i=await u.get(`api/get-doctor/${s.doctor_id}`);await u.post("/api/create-notification-log",{from:k,to:i.data.user.email,subject:"Laboratory Result Submission",message:"Submitted my laboratory result.",senderId:F,receiverId:i.data.user.user_id,notificationStatus:1,notificationType:2,labSubmittedId:r.data.labSubmission.labSubmitted_id}),n.value={show:!0,message:"Success! Laboratory results submitted successfully.",type:"success"},window.location.reload()}catch(r){console.error("Error submitting lab results:",r),n(`Failed to submit form: ${((o=(e=r.response)==null?void 0:e.data)==null?void 0:o.message)||r.message}`)}console.log(t)},U=t=>{s.labResults=Array.from(t.target.files)},g=L(()=>!!s.workupSubmitted);return(t,e)=>(c(),_(D,null,[b(l(z),{title:"Laboratory Result"}),b(te,null,{default:v(()=>[e[10]||(e[10]=a("div",{class:"page-heading"},[a("h1",{class:"main-heading"},"LABORATORY RESULT")],-1)),a("form",{onSubmit:G(C,["prevent"]),class:"form-container",style:{width:"700px"}},[a("div",ae,[e[7]||(e[7]=a("h2",null,"Surveillance Workup",-1)),a("div",oe,[g.value?h("",!0):(c(),R(H,{key:0,message:"Please select one."})),(c(!0),_(D,null,Q(T.value,(o,r)=>(c(),_("label",{key:r,class:"inline-flex items-center"},[P(a("input",{type:"radio",name:"labSubmitted",value:o.workup.workup_name,"onUpdate:modelValue":e[0]||(e[0]=i=>l(s).workupSubmitted=i),class:"form-radio"},null,8,re),[[x,l(s).workupSubmitted]]),e[3]||(e[3]=a("span",{class:"custom-radio"},null,-1)),a("span",ie,Y(o.workup.workup_name),1)]))),128)),a("label",le,[P(a("input",{type:"radio",value:"Other","onUpdate:modelValue":e[1]||(e[1]=o=>l(s).workupSubmitted=o),class:"form-radio"},null,512),[[x,l(s).workupSubmitted]]),e[4]||(e[4]=a("span",{class:"custom-radio"},null,-1)),e[5]||(e[5]=a("span",{class:"ml-2"},"Other",-1))])]),l(s).workupSubmitted==="Other"?(c(),_("div",ne,[b(J,{for:"other_workups"},{default:v(()=>e[6]||(e[6]=[$(" Please specify workup "),a("span",{class:"red-asterisk"},"*",-1)])),_:1}),b(X,{id:"other_workups",modelValue:l(s).other_workups,"onUpdate:modelValue":e[2]||(e[2]=o=>l(s).other_workups=o),type:"text",class:"mt-1 block w-full",required:""},null,8,["modelValue"])])):h("",!0)]),a("div",ue,[e[8]||(e[8]=a("h2",null,"Laboratory Result",-1)),a("input",{type:"file",accept:".jpg,.jpeg,.pdf",multiple:"",onChange:U,required:""},null,32)]),a("div",de,[b(K,{class:Z(["ms-4",{"opacity-25":l(s).processing}]),disabled:l(s).processing||!g.value,type:"submit"},{default:v(()=>e[9]||(e[9]=[$(" Submit ")])),_:1},8,["class","disabled"])])],32),n.value.show?(c(),R(ee,{key:0,message:n.value.message,type:n.value.type},null,8,["message","type"])):h("",!0)]),_:1})],64))}},Le=se(ce,[["__scopeId","data-v-c835bf39"]]);export{Le as default};
