import se from"./Layout-1c104a2a.js";import{s as F,a as v}from"./column.esm-e576acfe.js";import{s as ne}from"./dialog.esm-b66c5bf0.js";import"./vuecal-f418645a.js";import{d as I}from"./index-189aeacd.js";import{Q as ie,d as n,s as $,l as re,o as O,e as j,b as l,u,w as p,F as le,Z as ue,a as o,g as r,t as d,f as ce}from"./app-42536e63.js";import{_ as de}from"./PrimaryButton-cd95b478.js";import{_ as pe}from"./_plugin-vue_export-helper-c27b6911.js";import"./DropdownLink-ed97a0d6.js";/* empty css                                                               */const fe={class:"table-section"},ge={class:"table-container"},me={class:"system-message"},ve={style:{"font-weight":"bold"}},we={style:{"font-weight":"bold"}},ye={class:"table-container"},he={key:0,class:"popup"},be={class:"flex items-center justify-center mt-4"},_e={__name:"PatientNotificationPage",setup(Se){const{url:Pe,props:h}=ie(),b=h.auth.user.user_id,U=h.auth.user.lastname,T=h.auth.user.email;h.auth.user.role_id;const m=n(null),L=n(0),C=n(null),M=n({}),c=n(null),E=n(null),_=n(null),k=n([]),w=n([]),S=n([]),y=n(null),V=async()=>{try{const t=await axios.get("/api/find-patient",{params:{lastname:U,email:T}});m.value=t.data.patient_id}catch(t){console.log("Failed to fetch patient ID:",t)}},Y=async()=>{try{let t=await axios.get(`/api/disease/${m.value}/profile`);M.value=t.data,console.log("Disease Profile:",M.value),C.value=M.value.disease_primarySite}catch(t){console.error("Failed to fetch patient disease profile:",t)}},q=async()=>{try{let t=await axios.get(`/api/patient/${m.value}/treatments`);L.value=t.data,y.value=L.value.treatments[0].treatment_initialRxDate,console.log("Treatment history:",L.value),console.log("Initial treatment date:",y.value)}catch(t){console.error("Failed to fetch patient:",t)}},A=async t=>{try{let e=await axios.get(`/api/notifications/receiver/${t}`);c.value=e.data,c.value=c.value.filter(a=>{var s;return((s=a.notification_status)==null?void 0:s.notifStatus_name)!=="Action Taken"}),c.value=c.value.sort((a,s)=>s.notifLog_id-a.notifLog_id),console.log(c.value)}catch(e){console.error("Failed to fetch messages:",e)}},B=async()=>{try{const t=await axios.get(`/api/patients/${m.value}/survey-responses`);if(_.value=t.data,_.value&&_.value.surveyResponse_date){const e=new Date(_.value.surveyResponse_date),a=new Date,s=new Date(e);s.setMonth(s.getMonth()+3),console.log(e),console.log(a),console.log(s),a>=s&&k.value.push({date:s.toISOString().split("T")[0],document:"Symptom Survey",documentType:"Report Symptoms Form"})}}catch(t){console.error("Failed to fetch survey responses:",t)}},G=async()=>{try{const t=await axios.get(`/api/labMonitors/primary-site/${C.value}`);w.value=t.data,console.log("Laboratories: ",w.value)}catch(t){console.error("Error fetching laboratories:",t)}},H=async()=>{try{const t=await axios.get(`/api/patients/${m.value}/labs-submitted`);S.value=t.data,console.log("Submitted Laboratories: ",S.value)}catch(t){console.error("Error fetching submitted laboratories:",t)}},Q=t=>{const e=S.value.filter(s=>s.workup_id===t);return e.length===0?null:e.sort((s,g)=>new Date(g.labSubmission_date)-new Date(s.labSubmission_date))[0].labSubmission_date},W=(t,e)=>{const a=new Date,s=new Date(t),g=new Date(s);return g.setMonth(g.getMonth()+e),a<=g},Z=$(()=>!w.value.length||!S.value.length?w.value:w.value.filter(t=>{const e=Q(t.workup.workup_id);if(!e)return!0;const a=t.workup_frequency;return a?!W(e,a):!1})),R=n(null),z=async t=>{try{let e=await axios.get(`/api/latestonboards/${t}`);return R.value=e.data.doctor_id,R.value}catch(e){console.error(`Failed to fetch doctor with userId ${currentId}:`,e)}},J=async t=>{const e=new Date,a=new Date(y.value),s=(e.getFullYear()-a.getFullYear())*12+(e.getMonth()-a.getMonth()),g=await z(t);let N=await axios.get(`api/get-doctor/${g}`);const P=[];let i=new Date(a);for(s>=24&&i.setMonth(i.getMonth()+24),s<24?i.setMonth(i.getMonth()+3):i.setMonth(i.getMonth()+6);i<=e&&s>=0;)(await axios.post("/api/check-notification",{patientId:b,date:i.toDateString(),type:4})).data.exists||P.push({from:N.data.user.email,to:T,subject:"Checkup Schedule",message:`Reminder for follow-up checkup scheduled on ${i.toDateString()}.`,senderId:N.data.user.user_id,receiverId:b,notificationStatus:1,notificationType:4}),s<24?i.setMonth(i.getMonth()+3):i.setMonth(i.getMonth()+6);try{console.log(P),P.length>0?(await Promise.all(P.map(D=>axios.post("/api/create-notification-log",D))),console.log("Notifications successfully created.")):console.log("No new notifications to create.")}catch(D){console.error("Error creating notifications:",D)}};re(async()=>{await V(),await Y(),await q(),await A(b),await B(),await G(),await H(),await J(m.value),console.log("latest initial treatment date",y.value),Z.value.forEach(t=>{k.value.push({date:y,document:"Laboratories",documentType:t.workup.workup_name})})});const K=$(()=>c.value!==null?c.value.filter(e=>{var a;return((a=e.notification_status)==null?void 0:a.notifStatus_name)==="Unread"}).length:0),x=n(!1),f=n(null),X=async(t,e)=>{t.notification_status.notifStatus_name==="Unread"&&(console.log(t),await axios.put(`api/notification/${e}/update-status`,{notifLog_id:t.notifLog_id,status:2}),t.notification_status.notifStatus_name="Viewed"),E.value=t.notifLog_id,f.value=t,x.value=!0},ee=()=>{I.Inertia.visit(`/message?notifLogId=${E.value}`)},te=t=>(console.log(t),t.notification_status.notifStatus_name==="Unread"?"unread-message":"viewed-message"),ae=t=>t.workup_status==="Pending"?"pending-document":"submitted-document",oe=t=>{const e=t.data.document;e==="Symptom Survey"?I.Inertia.visit("/symptomsreport"):e==="Laboratories"&&I.Inertia.visit("/laboratoryresult")};return(t,e)=>(O(),j(le,null,[l(u(ue),{title:"Notification"}),l(se,null,{default:p(()=>[e[16]||(e[16]=o("div",{class:"page-heading"},[o("h1",{class:"main-heading"}," ALERTS ")],-1)),o("div",fe,[o("div",ge,[e[2]||(e[2]=o("div",{class:"title-div"},[o("h2",{class:"table-title"},"MESSAGES")],-1)),l(u(F),{value:c.value,responsiveLayout:"scroll",onRowClick:e[0]||(e[0]=a=>X(a.data,u(b))),rowHover:"",rowClass:te,paginator:!0,rows:3,paginatorTemplate:"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown",rowsPerPageOptions:[3,5,10,25]},{default:p(()=>[l(u(v),{field:"date",header:"Date"},{body:p(a=>[r(d(a.data.notification_date),1)]),_:1}),l(u(v),{field:"sender",header:"Sender"},{body:p(a=>[r(d(a.data.sender.firstname+" "+a.data.sender.lastname),1)]),_:1}),l(u(v),{field:"subject",header:"Subject"},{body:p(a=>[r(d(a.data.notification_subject),1)]),_:1})]),_:1},8,["value"])]),o("div",me,[e[9]||(e[9]=o("strong",null,"SYSTEM MESSAGE:",-1)),o("p",null,[e[3]||(e[3]=r("You have ")),o("span",ve,d(t.pendingSubmissionCount),1),e[4]||(e[4]=r(" pending laboratories. Please select ")),e[5]||(e[5]=o("span",{style:{"font-weight":"bold"}},"REQUEST DOCUMENTS",-1)),e[6]||(e[6]=r(" on the left side of the screen to download lab requests."))]),o("p",null,[e[7]||(e[7]=r("You have ")),o("span",we,d(K.value),1),e[8]||(e[8]=r(" unread messages from your doctor."))])]),o("div",ye,[e[10]||(e[10]=o("div",{class:"title-div"},[o("h2",{class:"table-title"},"DOCUMENTS FOR COMPLETION")],-1)),l(u(F),{value:k.value,responsiveLayout:"scroll",rowClass:ae,rowHover:"",paginator:!0,rows:3,paginatorTemplate:"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown",rowsPerPageOptions:[3,5,10,25],onRowClick:oe},{default:p(()=>[l(u(v),{field:"date",header:"Date"}),l(u(v),{field:"document",header:"Due Document"}),l(u(v),{field:"documentType",header:"Document Type"})]),_:1},8,["value"])])]),l(u(ne),{visible:x.value,"onUpdate:visible":e[1]||(e[1]=a=>x.value=a),header:"Message Details",closable:!0,modal:!0,width:"400px"},{default:p(()=>[f.value?(O(),j("div",he,[o("p",null,[e[11]||(e[11]=o("strong",null,"Date:",-1)),r(" "+d(f.value.notification_date),1)]),o("p",null,[e[12]||(e[12]=o("strong",null,"Sender:",-1)),r(" "+d(f.value.sender.firstname+" "+f.value.sender.lastname),1)]),o("p",null,[e[13]||(e[13]=o("strong",null,"Subject:",-1)),r(" "+d(f.value.notification_subject),1)]),o("p",null,[e[14]||(e[14]=o("strong",null,"Message:",-1)),r(" "+d(f.value.notification_notes),1)]),o("div",be,[l(de,{onClick:ee},{default:p(()=>e[15]||(e[15]=[r("Reply")])),_:1})])])):ce("",!0)]),_:1},8,["visible"])]),_:1})],64))}},Ne=pe(_e,[["__scopeId","data-v-c53587e1"]]);export{Ne as default};
